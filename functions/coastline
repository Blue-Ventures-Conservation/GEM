/*

This is the coastline generation module, which is part of the BVC GEM v1.2 library.
Either creates or ingests the vector based coastline used withing the GEM tool.

Last update: July 15 2024

*/

exports.coast_In = function(cst, cst_path, roi){ 
  
  var cst_t = function(){
    var mainlands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/mainlands');
    var big_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/big_islands');
    var small_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/small_islands');
    // use the roi to clip the world boundary polygons
    var area = mainlands.merge(big_islands).merge(small_islands).filterBounds(roi).geometry();
    
    // dissolve and then convert the geometries to a coordinate list
    var area_coords = ee.Geometry.MultiPolygon(area.geometry().geometries()).dissolve().coordinates().flatten();
    // use the coordinates to create a geometry
    var area_point = ee.Geometry.MultiPoint(area_coords);  

    // select points in roi and convert to coordinate list
    var coast = area_point.intersection(roi, ee.ErrorMargin(1));
    Map.addLayer(coast, {color: '000000'}, "Coastline");
    return coast;

  };

  var cst_f = function(cst_path){
        var coast = ee.FeatureCollection(cst_path).geometry()
                    .simplify(200)
                    .intersection(roi, ee.ErrorMargin(1));
        Map.addLayer(coast, {color: '000000'}, "Coastline");
        return coast;
   };




if(cst === true){
    var coast = cst_t();
    return coast;
  } else {
    var coast = cst_f(cst_path);
    return coast;
  }
};   
